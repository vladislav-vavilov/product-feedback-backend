type User {
	id: ID!
	email: String!
	password: String!
	username: String!
	firstName: String!
	lastName: String!
	posts: [Post]
}

type Post {
	id: ID!
	author: User!
	title: String!
	content: String!
	category: Category!
	likes: Int!
	comments: [Comment]
}

enum Category {
	UI
	UX
	ENHANCEMENT
	BUG
	FEATURE
}

input UserInput {
	email: String!
	password: String!
	username: String!
	lastName: String!
	firstName: String!
}

input LoginInput {
	email: String!
	password: String!
}

input CreatePostInput {
	userId: ID!
	title: String!
	content: String!
	category: Category!
}

input PostsFiltersInput {
	author: ID
	title: String
	content: String
}

input UpdatePostInput {
	id: ID!
	title: String
	content: String
	category: Category
	likes: Int
}

type Comment {
	id: ID!
	author: User!
	content: String!
}

input CreateCommentInput {
	postId: ID!
	userId: ID!
	content: String!
}

input UpdateCommentInput {
	id: ID!
	content: String!
}

type Query {
	user(id: ID!): User!
	posts(filters: PostsFiltersInput): [Post!]!
}

type Mutation {
	register(input: UserInput!): User!
	login(input: LoginInput!): User!

	createPost(input: CreatePostInput!): Post!
	updatePost(input: UpdatePostInput!): Post!
	deletePost(id: ID!): ID!

	createComment(input: CreateCommentInput!): Comment!
	updateComment(input: UpdateCommentInput!): Comment!
	deleteComment(id: ID!): ID!
}
